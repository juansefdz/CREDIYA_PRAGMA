version: '3.8'

services:
  app:
    build: .
    image: crediya-app:1.0.0
    container_name: crediya_app_container
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      # Conectar desde el contenedor a Postgres por nombre de servicio "db"
      SPRING_R2DBC_URL: r2dbc:postgresql://db:5432/crediya_db
      SPRING_R2DBC_USERNAME: usuario
      SPRING_R2DBC_PASSWORD: contrasena123
      SPRING_FLYWAY_URL: jdbc:postgresql://db:5432/crediya_db
      SPRING_FLYWAY_USER: usuario
      SPRING_FLYWAY_PASSWORD: contrasena123
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crediya-net

  db:
    image: postgres:14-alpine
    container_name: postgres_crediya_container
    restart: unless-stopped
    ports:
      # Solo para acceder desde tu host/IDE (fuera de Docker)
      - "5433:5432"
    environment:
      POSTGRES_DB: crediya_db
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: contrasena123
      TZ: America/Bogota
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usuario -d crediya_db"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - crediya-net

volumes:
  postgres_data:

networks:
  crediya-net:
    driver: bridge
